# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.provider "virtualbox"

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/xenial64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  config.vm.define "master" do |master|
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    master.vm.network "private_network", ip: "192.168.50.10"
    master.vm.hostname = "master"

    # Master specific provisioning actions
    master.vm.provision "shell", inline: <<-SHELL
    echo "Starting private Docker registry for cluster"
    mkdir /docker-images
    docker run -d -p 5000:5000 --restart=always --name registry -v /vagrant/docker-registry/config.yml:/etc/docker/registry/config.yml -v /docker-images:/docker-images registry:2
    SHELL
  end

  config.vm.define "node1" do |node1|
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    node1.vm.network "private_network", ip: "192.168.50.11"
    node1.vm.hostname = "node1"
  end

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
   # Display the VirtualBox GUI when booting the machine
   vb.gui = false
   # Customize the amount of memory on the VM:
   vb.memory = "1024"
  end

  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL

  # =====================================
  # Make sure hosts are routable by name
  # =====================================
  cat /vagrant/hosts >> /etc/hosts

  # ==========================
  # Download Docker packages
  # ==========================
  wget -nv https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce_18.09.3~3-0~ubuntu-xenial_amd64.deb
  wget -nv https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce-cli_18.09.3~3-0~ubuntu-xenial_amd64.deb
  wget -nv https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/containerd.io_1.2.4-1_amd64.deb

  # ==========================
  # Install Docker
  # ==========================
  dpkg -i containerd.io_1.2.4-1_amd64.deb
  dpkg -i docker-ce-cli_18.09.3~3-0~ubuntu-xenial_amd64.deb
  dpkg -i docker-ce_18.09.3~3-0~ubuntu-xenial_amd64.deb
  usermod -a -G docker vagrant

  # ==========================
  # Install Docker Compose
  # ==========================
  curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  chmod +x /usr/local/bin/docker-compose

  # ==================================================
  # Setup Docker daemon to use local registry proxy
  # ==================================================
  cp /vagrant/docker-daemon.json /etc/docker/daemon.json
  service docker restart

  # ================================================================================
  # Extract envoy binary and install on base VM, for non-Dockerized usage scenarios
  # ================================================================================
  docker run -v /home/vagrant:/home/vagrant -i envoyproxy/envoy /bin/bash -c 'cp $(which envoy) /home/vagrant/'
  mv /home/vagrant/envoy /usr/local/bin/
  SHELL
end
